import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class TicTacToe implements ActionListener {
    private JFrame frame = new JFrame("Tic Tac Toe");
    private JButton[] buttons = new JButton[9];
    private boolean player1Turn = true;
    
    public TicTacToe() {
        frame.setSize(400, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridLayout(3, 3));
        
        for (int i = 0; i < 9; i++) {
            buttons[i] = new JButton("");
            buttons[i].setFont(new Font("Arial", Font.PLAIN, 60));
            buttons[i].setFocusPainted(false);
            buttons[i].addActionListener(this);
            frame.add(buttons[i]);
        }
        
        frame.setVisible(true);
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        JButton buttonClicked = (JButton) e.getSource();
        
        if (player1Turn) {
            if (buttonClicked.getText().equals("")) {
                buttonClicked.setText("X");
                buttonClicked.setForeground(Color.RED);
                player1Turn = false;
                checkForWin();
            }
        } else {
            if (buttonClicked.getText().equals("")) {
                buttonClicked.setText("O");
                buttonClicked.setForeground(Color.BLUE);
                player1Turn = true;
                checkForWin();
            }
        }
    }
    
    private void checkForWin() {
        String[][] board = new String[3][3];
        
        for (int i = 0; i < 9; i++) {
            board[i / 3][i % 3] = buttons[i].getText();
        }
        
        for (int i = 0; i < 3; i++) {
            // Check rows and columns
            if (board[i][0].equals(board[i][1]) && board[i][1].equals(board[i][2]) && !board[i][0].equals("")) {
                showWinMessage(board[i][0]);
                return;
            }
            if (board[0][i].equals(board[1][i]) && board[1][i].equals(board[2][i]) && !board[0][i].equals("")) {
                showWinMessage(board[0][i]);
                return;
            }
        }
        
        // Check diagonals
        if (board[0][0].equals(board[1][1]) && board[1][1].equals(board[2][2]) && !board[0][0].equals("")) {
            showWinMessage(board[0][0]);
            return;
        }
        if (board[0][2].equals(board[1][1]) && board[1][1].equals(board[2][0]) && !board[0][2].equals("")) {
            showWinMessage(board[0][2]);
            return;
        }
        
        // Check for draw
        boolean draw = true;
        for (JButton button : buttons) {
            if (button.getText().equals("")) {
                draw = false;
                break;
            }
        }
        
        if (draw) {
            JOptionPane.showMessageDialog(frame, "The game is a draw!");
            resetBoard();
        }
    }
    
    private void showWinMessage(String winner) {
        JOptionPane.showMessageDialog(frame, "Player " + winner + " wins!");
        resetBoard();
    }
    
    private void resetBoard() {
        for (JButton button : buttons) {
            button.setText("");
        }
        player1Turn = true;
    }
    
    public static void main(String[] args) {
        new TicTacToe();
    }
}

